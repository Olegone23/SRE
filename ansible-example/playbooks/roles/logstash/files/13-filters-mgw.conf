filter {
	if [type] == "mgwLog" {
		grok {
		  match => {
		    "message" => "(?m)%{INT:timestamp} %{WORD:level} %{GREEDYDATA:rawmsg}"
		  }
		}
		date {
			match => [ "timestamp", "UNIX_MS"]
		}
		if [rawmsg] { #if parse successful
			mutate {
			  replace => [ "message", "%{rawmsg}" ]
			  uppercase => [ "level" ]
			}
		}
		if[level] == "ERROR" {
			grok {
				match => {
					"message" =>"(?m)m=%{WORD:method}, u=%{NOTSPACE:uri}, h=%{NOTSPACE:host}, r=::%{BASE16NUM:hex}:%{NOTSPACE:referer}, s=%{INT:response}, name=%{WORD:name}, message=%{GREEDYDATA:msg}, code=%{WORD:errorcode}, stack=%{GREEDYDATA:stacktrace}"
				}
			}	
			mutate {
			  replace => [ "message", "%{msg}" ]
			}
		}
		mutate {
		  remove_field => ["rawmsg", "msg", "timestamp", "hex", "path"]
		  add_field => {"application" => "gh-microgateway"}
		  add_field => {"applicationEnvironment" => "${LS_APP_ENV}"}
		  add_field => {"instanceId" => "${AWS_INSTANCE_ID}"}
		}	
	}
}